name: Release Mod

on:
  release:
    types:
      - created
  pull_request:
    types:
      - closed
  workflow_dispatch:
    inputs:
      version:
        description: 'Specify the version for the release'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read version and group from build.gradle
        id: extract_values
        run: echo "::set-output name=version::$(grep version build.gradle | awk -F"'" '{print $2}') ::set-output name=group::$(grep group build.gradle | awk -F"'" '{print $2}')"

      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'

      - name: Grant execute permissions to gradlew
        run: chmod +x ./gradlew

      - name: Build Mod
        run: ./gradlew build

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/libs/${{ steps.extract_values.outputs.group }}-${{ steps.extract_values.outputs.version }}.jar
          asset_name: your-mod-${{ steps.extract_values.outputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Get PR Commits
        id: get_pr_commits
        run: echo "::set-output name=commits::$(git log --merges --pretty=format:'%s' ${{ github.event.before }}..${{ github.sha }})"

      - name: Create Release Tag
        if: github.event_name == 'release'
        run: git tag -a v${{ steps.extract_values.outputs.version }} -m "Release v${{ steps.extract_values.outputs.version }}"

      - name: Push Release Tag
        if: github.event_name == 'release'
        run: git push origin v${{ steps.extract_values.outputs.version }}

      - name: Create GitHub Release
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.extract_values.outputs.version }}
          release_name: Release v${{ steps.extract_values.outputs.version }}
          body: ${{ steps.get_pr_commits.outputs.commits }}
          draft: false
          prerelease: false
